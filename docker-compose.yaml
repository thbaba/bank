x-net-base: &net-base
  networks:
    - dcbanknet
x-actuator-healthcheck-base: &actutator-healthcheck-base
  healthcheck:
    test: "curl --fail --silent localhost/actuator/health/readiness | grep UP || exit 1"
    interval: 10s
    retries: 11
    start_period: 10s
    timeout: 5m
services:
  accounts:
    <<: *net-base
    image: "thedeno/accounts:latest"
#    build:
#      context: ./accounts
    container_name: accounts-ms
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      SPRING_R2DBC_URL: "r2dbc:postgresql://accounts-postgres:5432/accounts_db"
      SPRING_FLYWAY_URL: "jdbc:postgresql://accounts-postgres:5432/accounts_db"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver-ms"
    depends_on:
      accounts-postgres:
        condition: service_healthy
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
    ports:
      - "3000:80"
  accounts-postgres:
    <<: *net-base
    image: "postgres:17-alpine"
    container_name: accounts-postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "accounts_db"
    healthcheck:
      test: "pg_isready -d accounts_db"
      interval: 10s
      retries: 11
      start_period: 10s
      timeout: 5m
  cards:
    <<: *net-base
    image: "thedeno/cards:latest"
    #    build:
    #      context: ./cards
    container_name: cards-ms
    environment:
      SPRING_APPLICATION_NAME: "cards"
      SPRING_R2DBC_URL: "r2dbc:postgresql://cards-postgres:5432/cards_db"
      SPRING_FLYWAY_URL: "jdbc:postgresql://cards-postgres:5432/cards_db"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver-ms"
    depends_on:
      cards-postgres:
        condition: service_healthy
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
  cards-postgres:
    <<: *net-base
    image: "postgres:17-alpine"
    container_name: cards-postgres
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "cards_db"
    healthcheck:
      test: "pg_isready -d cards_db"
      interval: 10s
      retries: 11
      start_period: 10s
      timeout: 5m
  configserver:
    <<: [*net-base, *actutator-healthcheck-base]
    image: "thedeno/configserver:latest"
#    build:
#      context: ./configserver
    container_name: configserver-ms
  discoveryserver:
    <<: [*net-base, *actutator-healthcheck-base]
    image: "thedeno/discoveryserver:latest"
#    build:
#      context: ./discoveryserver
    container_name: discoveryserver-ms
    environment:
      SPRING_APPLICATION_NAME: "discoveryserver"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver-ms"
    depends_on:
      configserver:
        condition: service_healthy
  gatewayserver:
    <<: *net-base
    image: "thedeno/gatewayserver:latest"
    container_name: gatewayserver-ms
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver-ms"
    depends_on:
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
    ports:
      - "80:80"
networks:
  dcbanknet:
    driver: bridge
